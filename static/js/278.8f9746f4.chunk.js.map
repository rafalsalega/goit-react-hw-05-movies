{"version":3,"file":"static/js/278.8f9746f4.chunk.js","mappings":"sKAAO,IAAMA,EAAM,kC,iHCoFnB,UA/EA,WAAmB,IAAD,EAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC9C,GAAkCT,EAAAA,EAAAA,WAAS,GAA3C,eAAOU,EAAP,KAAkBC,EAAlB,MAEDC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAU,mCAAG,+GAEQC,MAAM,qDAAD,OAC2Bf,EAAAA,EAD3B,kBACwCS,IAHrD,cAETO,EAFS,gBAKIA,EAASC,OALb,OAKTC,EALS,OAMfb,EAAWa,EAAKd,SAChBQ,GAAa,GAPE,kDASfO,QAAQC,MAAM,wBAAd,MACAR,GAAa,GAVE,0DAAH,qDAchBE,GAED,GAAE,IAEH,IAKMO,EAAY,mCAAG,WAAMC,GAAN,gFACnBV,GAAa,GACbU,EAAMC,iBAFa,kBAIMR,MAAM,qDAAD,OAC2Bf,EAAAA,EAD3B,kBACwCE,IALnD,cAIXc,EAJW,gBAOEA,EAASC,OAPX,OAOXC,EAPW,OAQjBb,EAAWa,EAAKd,SAChBQ,GAAa,GATI,kDAWjBO,QAAQC,MAAM,6BAAd,MACAR,GAAa,GAZI,0DAAH,sDAgBlB,OACE,4BACE,kBAAMY,SAAUH,EAAhB,WACE,4BACE,kBAAOI,KAAK,OAAOC,MAAOxB,EAAOyB,SAzBpB,SAAAL,GACnBnB,EAASmB,EAAMM,OAAOF,OACtBlB,EAAgB,SAAD,OAAUc,EAAMM,OAAOF,OACvC,OAwBK,mBAAQD,KAAK,SAAb,SAAsB,cAEvBd,IAAa,SAAC,IAAD,IACM,IAAnBP,EAAQyB,QACP,uBAAG,qBAEH,wBACGzB,EAAQ0B,KAAI,SAAAC,GAAM,OACjB,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCD,EAAOE,IAC9CC,MAAO,CACLC,KAAK,mCAAD,OAAqC5B,IAH7C,SAMGwB,EAAOK,SAPHL,EAAOE,GADC,QAgB5B,C,sBClFD,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ1C,EAAK2C,GACpE,IACE,IAAIC,EAAON,EAAItC,GAAK2C,GAChBjB,EAAQkB,EAAKlB,KAInB,CAHE,MAAON,GAEP,YADAoB,EAAOpB,EAET,CAEIwB,EAAKC,KACPN,EAAQb,GAERoB,QAAQP,QAAQb,GAAOqB,KAAKN,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUP,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMf,GACbW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQhB,EAClE,CAEA,SAASgB,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["asset/pass.js","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const key = 'd2e7e2667c6f498e88b81d9628f5971c';","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { key } from '../../asset/pass';\nimport { Loader } from 'components/Loader/Loader'; \n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n   const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${movieName}`\n        );\n        const data = await response.json();\n        setResults(data.results);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n    setSearchParams(`query=${event.target.value}`);\n  };\n\n  const handleSubmit = async event => {\n    setIsLoading(true);\n    event.preventDefault();    \n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`\n      );\n      const data = await response.json();\n      setResults(data.results);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error searching for movie:', error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" value={query} onChange={handleChange} />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      {results.length === 0 ? (\n        <p>No results yet.</p>\n      ) : (\n        <ul>\n          {results.map(result => (\n            <li key={result.id}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${result.id}`}\n                state={{\n                  from: `/goit-react-hw-05-movies/movies?${searchParams}`,\n                }}\n              >\n                {result.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["key","useState","query","setQuery","results","setResults","useSearchParams","searchParams","setSearchParams","movieName","get","isLoading","setIsLoading","useEffect","fetchMovie","fetch","response","json","data","console","error","handleSubmit","event","preventDefault","onSubmit","type","value","onChange","target","length","map","result","to","id","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}