{"version":3,"file":"static/js/336.0c0a47fe.chunk.js","mappings":"sKAAO,IAAMA,EAAM,kC,2KCIbC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sZAiBHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,kBCwED,MA5FA,WAAyB,IAAD,EACtB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAe,WADJC,EAAAA,EAAAA,MACaC,aAAT,eAAgBC,OAAQ,IACvCC,GAAUC,EAAAA,EAAAA,MAAYD,QAsB5B,OApBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,+GAECC,MAAM,sCAAD,OACYJ,EADZ,oBAC+BjB,EAAAA,EAD/B,oBAFN,cAEhBsB,EAFgB,gBAKHA,EAASC,OALN,OAKhBC,EALgB,OAMtBd,EAASc,GANa,kDAQtBZ,EAAS,EAAD,IARc,0DAAH,qDAYvBQ,GACD,GAAE,CAACH,IAMAN,GACK,2BAAK,UAAQA,EAAMc,WAGvBhB,GAKH,4BACE,SAACL,EAAD,CAAUC,GAAIQ,EAAd,SAA4B,aAC5B,wBAAKJ,EAAMiB,SACX,uBAAG,gBAAe,IAhBC,WACrB,GAAIjB,EAAMkB,aAAc,OAAuC,GAAhClB,EAAMkB,aAAaC,QAAQ,EAC3D,CAcuBC,GAAiB,KAAC,wBAAI,eAC1C,uBAAIpB,EAAMqB,YACV,0BACE,uBAAG,kBAAiB,IAAErB,EAAMsB,iBAE9B,0BACE,uBAAG,aAAY,IAAEtB,EAAMuB,QAAQ,eAEjC,0BACA,uBAAG,YAAW,IAAEC,MAAMC,QAAQzB,EAAM0B,SAAW1B,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAE1F,gBACEC,IACE/B,EAAMgC,YAAN,yCACsChC,EAAMgC,aACxC,oDAENC,IAAKjC,EAAMiB,MACXiB,MAAM,SAER,2BACE,yBACA,SAAC,KAAD,CACItC,GAAE,0CAAqCY,EAArC,SACFF,MAAO,CAAEC,KAAMH,GAFnB,SAGG,iBAIH,yBACE,SAAC,KAAD,CACAR,GAAE,0CAAqCY,EAArC,YACAF,MAAO,CAAEC,KAAMH,GAFjB,SAGC,oBAIH,yBACE,SAAC,KAAD,CACER,GAAE,0CAAqCY,EAArC,oBACFF,MAAO,CAAEC,KAAMH,GAFjB,SAGC,yBAKL,SAAC,EAAA+B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAtDG,SAACA,EAAA,EAAD,GA0DV,C","sources":["asset/pass.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const key = 'd2e7e2667c6f498e88b81d9628f5971c';","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 5px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  background-color: rgb(255, 255, 255);\n  border-radius: 5px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"16\" />\n      {children}\n    </StyledLink>\n  );\n};","import { Suspense } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport { key } from '../../asset/pass';\nimport { Loader } from 'components/Loader/Loader'; \n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from || '/';\n  const movieId = useParams().movieId;\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`\n        );\n        const data = await response.json();\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const userScoreCount = () => {\n    if (movie.vote_average) return movie.vote_average.toFixed(1) * 10;\n  };\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (!movie) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Go Back</BackLink>\n      <h1>{movie.title}</h1>\n      <b>User score:</b> {userScoreCount()}%<h3>Overview:</h3>\n      <p>{movie.overview}</p>\n      <p>\n        <b>Release date:</b> {movie.release_date}\n      </p>\n      <p>\n        <b>Runtime:</b> {movie.runtime} minutes\n      </p>\n      <p>\n      <b>Genres:</b> {Array.isArray(movie.genres) && movie.genres.map(genre => genre.name).join(', ')}\n      </p>\n      <img\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            : 'https://poster.keepcalmandposters.com/3253015.jpg'\n        }\n        alt={movie.title}\n        width=\"500\"\n      />\n      <ul>\n        <li>\n        <Link\n            to={`/goit-react-hw-05-movies/movies/${movieId}/cast`}\n            state={{ from: backLinkHref }}\n          >\n            View Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n          to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}\n            state={{ from: backLinkHref }}\n          >\n            View Reviews\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/goit-react-hw-05-movies/movies/${movieId}/watch/providers`}\n            state={{ from: backLinkHref }}\n          >\n            View Providers\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default MovieDetails;"],"names":["key","StyledLink","styled","Link","BackLink","to","children","size","useState","movie","setMovie","error","setError","backLinkHref","useLocation","state","from","movieId","useParams","useEffect","fetchMovieDetails","fetch","response","json","data","message","title","vote_average","toFixed","userScoreCount","overview","release_date","runtime","Array","isArray","genres","map","genre","name","join","src","poster_path","alt","width","Suspense","fallback","Loader"],"sourceRoot":""}